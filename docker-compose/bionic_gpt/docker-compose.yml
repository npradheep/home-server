x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
    tag: "{{.Name}}"

services:

  llm-api:
    image: ghcr.io/bionic-gpt/llama-3-8b-chat:1.1.1
    platform: linux/amd64
    logging: *logging
    networks:
      - non-routable

  embeddings-api:
    image: ghcr.io/bionic-gpt/bionicgpt-embeddings-api:cpu-0.6
    platform: linux/amd64
    logging: *logging
    networks:
      - non-routable

  # Document parsing, OCR and chunking.
  chunking-engine:
    image: downloads.unstructured.io/unstructured-io/unstructured-api:4ffd8bc
    platform: linux/amd64
    logging: *logging
    networks:
      - non-routable

  # Postgres pre-loaded with pgVector
  # To connect outside docker `docker compose exec postgres psql -U postgres`
  postgres:
    image: ankane/pgvector
    platform: linux/amd64
    environment:
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *logging
    # volumes:
    #   - bionicgpt_database:/var/lib/postgresql/data
    networks:
      - non-routable
    env_file:
      - stack.env


  # Sets up our database tables
  migrations:
    image: ghcr.io/bionic-gpt/bionicgpt-db-migrations:1.9.2
    platform: linux/amd64
    environment:
      DATABASE_URL: postgresql://postgres:${PG_PASS}@${PG_USER}:5432/bionic-gpt?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    logging: *logging
    networks:
      - non-routable
    env_file:
      - stack.env
  
  # Parses documents into chunks and creates embeddings.
  rag-engine:
    image: ghcr.io/bionic-gpt/bionicgpt-rag-engine:1.9.2
    platform: linux/amd64
    environment:
      APP_DATABASE_URL: postgresql://bionic_application:${PG_PASS}@${PG_USER}:5432/bionic-gpt?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    logging: *logging
    networks:
      - non-routable
    env_file:
      - stack.env
  
  # Our axum server delivering our user interface
  app:
    image: ghcr.io/bionic-gpt/bionicgpt:1.9.2
    platform: linux/amd64
    environment:
      DANGER_JWT_OVERRIDE: ${DANGER_JWT_OVERRIDE}
      APP_DATABASE_URL: postgresql://bionic_application:${PG_PASS}@${PG_USER}:5432/bionic-gpt?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "3000:7703"
    logging: *logging
    networks:
      - non-routable
      - routable
    env_file:
      - stack.env

      
volumes:
  bionicgpt_database:
    name: bionicgpt_database
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /home/pradh33p/bionic_gpt_database

networks:
  routable:
    external: true
  non-routable:
    external: true
